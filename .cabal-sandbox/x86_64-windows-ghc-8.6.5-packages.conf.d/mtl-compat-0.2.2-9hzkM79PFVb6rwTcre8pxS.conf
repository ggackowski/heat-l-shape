name: mtl-compat
version: 0.2.2
id: mtl-compat-0.2.2-9hzkM79PFVb6rwTcre8pxS
key: mtl-compat-0.2.2-9hzkM79PFVb6rwTcre8pxS
license: BSD-3-Clause
copyright: (C) 2015-2017 Ryan Scott
maintainer: Ryan Scott <ryan.gl.scott@gmail.com>
author: Ryan Scott
stability: Provisional
homepage: https://github.com/haskell-compat/mtl-compat
synopsis: Backported Control.Monad.Except module from mtl
description:
    This package backports the "Control.Monad.Except" module from
    @mtl@ (if using @mtl-2.2.0.1@ or earlier), which reexports the
    @ExceptT@ monad transformer and the @MonadError@ class.
    .
    This package should only be used if there is a need to use the
    @Control.Monad.Except@ module specifically. If you just want
    the @mtl@ class instances for @ExceptT@, use
    @transformers-compat@ instead, since @mtl-compat@ does nothing
    but reexport the instances from that package.
    .
    Note that unlike how @mtl-2.2@ or later works, the
    "Control.Monad.Except" module defined in this package exports
    all of @ExceptT@'s monad class instances. Therefore, you may
    have to declare @import Control.Monad.Except ()@ at the top of
    your file to get all of the @ExceptT@ instances in scope.
category: Compatibility
abi: daffb3201b734bc0c941cb76f1ff3f3e
exposed: True
library-dirs: "C:\\Program Files\\Haskell Platform\\8.6.5\\mingw\\lib"
data-dir: C:\heat-l-shape\.cabal-sandbox\x86_64-windows-ghc-8.6.5\mtl-compat-0.2.2
include-dirs: "C:\\Program Files\\Haskell Platform\\8.6.5\\mingw\\include"
depends:
    base-4.12.0.0 mtl-2.2.2
haddock-interfaces: C:\heat-l-shape\.cabal-sandbox\doc\x86_64-windows-ghc-8.6.5\mtl-compat-0.2.2\html\mtl-compat.haddock
haddock-html: C:\heat-l-shape\.cabal-sandbox\doc\x86_64-windows-ghc-8.6.5\mtl-compat-0.2.2\html
